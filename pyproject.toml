[tool]
[tool.poetry]
name = "nannyml"
version = "0.10.5"
homepage = "https://github.com/nannyml/nannyml"
description = "NannyML, Your library for monitoring model performance."
authors = ["Niels Nuyttens <niels@nannyml.com>"]
readme = "README.md"
license =  "Apache-2.0"
classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "nannyml" },
#    { include = "tests", format = "sdist" },
]

[tool.poetry.scripts]
nml = "nannyml.cli.cli:cli"
nannyml = "nannyml.cli.cli:cli"

[tool.poetry.dependencies]
python = ">=3.7,<3.13"
pandas = [
    {version="^1.3", python=">=3.7.1,<3.8"},
    {version=">=1.5", python=">=3.8,<3.12"}
]
python-dateutil = "^2.8.2"
scikit-learn = [
    {version="^1.0.2", python=">=3.7,<3.8"},
    {version="^1.2", python=">=3.8,<3.12"}
]
joblib = "^1.1.0"
category-encoders = "^2.3.0"
matplotlib = [
    {version="^3.5", python=">=3.7.1,<3.8"},
    {version="^3.7", python=">=3.8,<3.12"}
]
plotly = "^5.6.0"
scipy = [
    {version="^1.7.3", python=">=3.7,<3.8"},
    {version="^1.10", python=">=3.8,<3.12"}
]
numpy = [
    {version="^1.21", python=">=3.7,<3.8"},
    {version="^1.24,<1.25", python=">=3.8,<3.12"}
]
seaborn = "^0.11.2"
kaleido = "0.2.1"
pyarrow = [
    {version="^12.0.0", python=">=3.7,<3.8"},
    {version="^14.0.0", python=">=3.8,<3.12"}
]
gcsfs = "^2022.5.0"
pydantic = "^1.9.1"
rich = "^12.5.1"
click = "^8.1.3"
PyYAML = "^6.0"
Jinja2 = "<3.1"
pyfiglet = "^0.8.post1"
lightgbm = "^3.3.2"
FLAML = "^1.0.11"
s3fs = "^2022.8.2"
sqlmodel = "^0.0.8"
APScheduler = "^3.9.1"
psycopg2-binary = "^2.9.3"
analytics-python = "^1.4.0"
python-dotenv = "^0.21.0"
types-pyyaml = "^6.0.12.8"
types-python-dateutil = "^2.8.19.10"

[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
isort = "^5.8.0"
flake8 = "^3.9.2"
flake8-docstrings = "^1.6.0"
flake8-typing-imports = "^1.12.0"
mypy = "^1.0"
pytest = "^6.2.4"
pytest-cov = "^2.12.0"
pytest-mock = "^3.7.0"
tox = "^3.20.1"
virtualenv = "^20.2.2"
pip = ">=20.3.1,<22.0.0"
twine = "^3.3.0"
pre-commit = "^2.12.0"
toml = "^0.10.2"
bump2version = "^1.0.1"
jupyterlab = "^3.2.9"
sphinx = "^5.0.2"
sphinx-rtd-theme = "^1.0.0"
sphinx-toggleprompt = "^0.2.0"
sphinx-copybutton = "^0.5.0"
typing-extensions = "^4.4.0"
sphinx-toolbox = "^3.2.0"
pytest-lazy-fixture = "^0.6.3"
types-click = "^7.1.8"
types-python-dateutil = "^2.8.19.6"
types-PyYAML = "^6.0"
types-requests = "^2.31.0.3"


[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
